<Symbol> -> ? | _ | @

<String> -> <az><String> | <AZ><String> | <Symbol><String>
	| <number><String> | epsilon 

<Identifier> -> <az><String> 

<Type>-> Int | Bool | List | Mat 

<Index> -> [<Expr>] | [<Expr>, <Expr>] | [<Expr>:<Expr>] | [:, <Expr>]   

<Indices> -> <Index> | <Index><Indices>

<Read> -> <Identifier> | <Identifier><Indices>

<Expr> -> True | False | <number> | <Read> | <Attr> | <Len>
	| <Range> | <List> | <Negate> | <Binary> 

<Parameter> -> <Identifier>:<Type> | epsilon

<Parameters> -> <Paramenter>,<Parameters> | <Parameter>

<Arguments> -> <Expr> | <Expr>,<Arguments>

<If> -> if <Expr> { <Statements> }

<For> -> for <Identifier> in <Expr> { <Statements> }

<UserCall> -> call <Identifier>(<Arguments>); | call <Identifier>();

<Assignment> -> 

<MethodCall> -> <Target>.<Identifier>(<Arguments>) | <Target>.<Identifier>();

<Blink> -> blink(<Expr>,<Expr>,<Expr>,<TimeUnit>,<Expr>)

<Delay> ->

<PrintLed> ->

<PrintLedX> ->

<Statement> -> <If> | <For> | <UserCall> | <Assignment> | <MethodCall>
	| <Blink> | <Delay> | <PrintLed> | <PrintLedX> | epsilon

<Statements> -> <Statement>;<Statement> | <Statement> 

<Procedure> -> procedure <Identifier>(<Parameters>){<statements>}
	| epsilon

<Procedures> -> <Procedure><Procedures> | <Procedure>

<Program> -> <Procedures>